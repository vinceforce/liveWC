  <video src="" id="video" autoplay="true"></video>

  <canvas style="display:none" id="preview"></canvas>
  <div id="logger"></div>

  <script type="text/javascript">
  "use strict";

    var canvas = document.getElementById("preview");
    var context = canvas.getContext("2d");
    canvas.width = 800;
    canvas.height = 600;
    context.width = canvas.width;
    context.height = canvas.height;

    var video = document.getElementById("video");

    var socket = io('/<%=room%>');
    var socketId;
    let imgVid;
    // socket.on('stream-id', function(data){
    //   alert('data.room'  + data.room );
    //   if (data.room  == '<%=room%>') {
    //     socketId = data.socketId;
    //   }
    // });
    //alert(socket.id);
    var vdTokens = [];

    function logger(msg){
      $("#logger").text(msg);
    }

    function loadCam(stream){
      video.src = window.URL.createObjectURL(stream);
      logger('Caméra correctement chargée [OK]');
    }

    function loadFail(){
      logger('Caméra non connectée, merci de vérifier votre caméra!')
    }

    function viewVideo(video, context, socketId){
      context.drawImage(video, 0, 0,context.width,context.height);
      imgVid = canvas.toDataURL('image/jpeg', 0.6);
      socket.emit('stream', {socketId: socketId, image: imgVid});
      //alert('emission événement ' + 'stream-' + socket.id);
    }

    function createVideoToken() {
      //alert(room + ' | ' + socketId);
      socket.emit('stream-prepare', {room: '<%= room %>'});
    }

    $(function(){
      navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
      if (navigator.getUserMedia) {
      //   navigator.getUserMedia({video: { width: { min: 1024, ideal: 1280, max: 1920 },
      //      height: { min: 776, ideal: 720, max: 1080 } }, audio: true},loadCam, loadFail);
      // }
      navigator.getUserMedia({video: true, audio: true}, loadCam, loadFail);
    }
      createVideoToken();
      setInterval(function(){
        createVideoToken();
      }, 2000);
      socket.on('stream-id', function(data){
        //alert('data.room '  + data.room + ' | ' + 'data.socketId ' + data.socketId);
        if (data.room  == '<%=room%>') {
          socketId = data.socketId;
          // setInterval(function(){
          //   viewVideo(video, context, socketId);
          // }, 560);
          setInterval(viewVideo, 2240, video, context, socketId);
        }
      });
      //alert('<%= room %>' + ' | ' + socketId);
    });
 </script>
 <script>
 var idx = 0;
 var filters = ['grayscale', 'sepia', 'blur', 'brightness',
                'contrast', 'hue-rotate', 'hue-rotate2',
                'hue-rotate3', 'saturate', 'invert', ''];

 function changeFilter(e) {
   var el = e.target;
   el.className = '';
   var effect = filters[idx++ % filters.length]; // loop through filters.
   if (effect) {
     el.className = effect;
     socket.emit('stream-effect', {room: '<%=room%>', effectclass : effect});
   }
 }
 document.querySelector('video').addEventListener('click', changeFilter, false);
 </script>
 <%- contentFor('title') %>
 Emission de vidéo
